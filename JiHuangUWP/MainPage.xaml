<Page
    x:Class="JiHuangUWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:JiHuangUWP"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:JiHuangUWP.Model"
    DataContext="{StaticResource ViewModel}"
    mc:Ignorable="d">
    <Page.Resources>
        <x:Double x:Key="SplitWidth">35</x:Double>

        <Style x:Key="SplitStackPanel" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>

        <Style x:Key="SplitFe" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="Width" Value="{StaticResource SplitWidth}" />
        </Style>

        <Style x:Key="SplitButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        </Style>
       
        <!--<Style x:Key="VehicleListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}"/>
            <Setter Property="FocusVisualPrimaryThickness" Value="2"/>
            <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}"/>
            <Setter Property="FocusVisualSecondaryThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="{ThemeResource ListViewItemCheckMode}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" DragForeground="{ThemeResource ListViewItemDragForeground}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}" FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--<Style x:Key="VehicleListViewItemStyle" TargetType="ListViewItem" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid Background="Gray" Margin="1">
                            <RadioButton GroupName="Epos" >
                                -->
        <!--IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsSelected,Mode=TwoWay}"-->
        <!--
                                <ContentPresenter x:Name="Presenter" />
                            </RadioButton>

                            -->
        <!--<Border BorderThickness="1" BorderBrush="Orange" Visibility="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
        <!--
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="50"
              Visibility="Collapsed">
            <ToggleButton x:Name="SplitToggleButton" Visibility="{Binding FrameVisibility,Mode=OneWay}">
                <ToggleButton.Content>
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE700;"></TextBlock>
                </ToggleButton.Content>
            </ToggleButton>
        </Grid>
        <Frame Grid.Row="1" x:Name="frame"></Frame>
        <SplitView Grid.Row="1" IsPaneOpen="{Binding ElementName=SplitToggleButton,Path=IsChecked,Mode=TwoWay}"
                   DisplayMode="CompactOverlay"  OpenPaneLength="200" Visibility="{Binding FrameVisibility,Mode=OneWay}"
                   CompactPaneLength="0" >
            <SplitView.Pane>
                <Grid>
                    <ListView ItemsSource="{x:Bind ViewModel.EposPage}" 
                              IsItemClickEnabled="True" ItemClick="{x:Bind ViewModel.Epos_OnItemClick}"
                              >
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="model:EposPage">
                                <TextBlock Text="{x:Bind Name}"></TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <!--<StackPanel>
                        <Button Style="{StaticResource SplitButton}">
                            <Button.Content>
                                <Grid>
                                    <StackPanel Style="{StaticResource SplitStackPanel}">
                                        <TextBlock Style="{StaticResource SplitFe}"
                                           Text="&#xE224;" />
                                        <TextBlock Text="私密文本" />
                                    </StackPanel>
                                </Grid>
                            </Button.Content>
                        </Button>

                        <Button Style="{StaticResource SplitButton}">
                            <Button.Content>
                                <Grid>
                                    <StackPanel Style="{StaticResource SplitStackPanel}">
                                        <TextBlock Style="{StaticResource SplitFe}"
                                           Text="&#xE224;" />
                                        <TextBlock Text="密码本" />
                                    </StackPanel>
                                </Grid>
                            </Button.Content>
                        </Button>


                    </StackPanel>
                    <StackPanel VerticalAlignment="Bottom">
                        <Button Style="{StaticResource SplitButton}"
                                Click="{x:Bind View.NavigateToInfo}">
                            <Button.Content>
                                <StackPanel Style="{StaticResource SplitStackPanel}">
                                    <TextBlock Style="{StaticResource SplitFe}"
                                                  Text="&#xE783;"></TextBlock>
                                    <TextBlock Text="信息"></TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource SplitButton}"
                                Click="{x:Bind View.NavigateToAccount}">
                            <Button.Content>
                                <StackPanel Style="{StaticResource SplitStackPanel}">
                                    <TextBlock Style="{StaticResource SplitFe}"
                                                  Text="&#xE713;"></TextBlock>
                                    <TextBlock Text="设置"></TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Style="{StaticResource SplitButton}">
                            <Button.Content>
                                <StackPanel Style="{StaticResource SplitStackPanel}">
                                    <TextBlock Style="{StaticResource SplitFe}"
                                                  Text="&#xE7E8;"></TextBlock>
                                    <TextBlock Text="关闭"></TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </StackPanel>-->
                </Grid>
            </SplitView.Pane>
        </SplitView>
    </Grid>
</Page>
